name: ci
on:
  push:
    branches:
      - main
      - release/**
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+.dev[0-9]+'
  pull_request: {}

jobs:
  test-demo-app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Start Redis
        uses: supercharge/redis-github-action@1.8.0
      - name: Test demo app
        env:
          CELERY_BROKER_URL: redis://0.0.0.0:6379
          DJANGO_SETTINGS_MODULE: config.settings.test_demo_app
        run: pytest --cov=./django_structlog_demo_project --cov-append django_structlog_demo_project
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U setuptools
          python -m pip install tox tox-gh-actions -r requirements/coverage.txt
      - name: Start Redis
        uses: supercharge/redis-github-action@1.8.0
      - name: Test with tox
        run: tox
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-docs:
    needs:
      - test-demo-app
      - test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
      - name: make html
        working-directory: docs
        run: make html
      - name: make doctest
        working-directory: docs
        run: make doctest

  black:
    needs:
      - test-demo-app
      - test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/black.txt
      - name: run black
        run: black --check --verbose .

  ruff:
    needs:
      - test-demo-app
      - test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/ruff.txt
      - name: run ruff
        run: ruff check .

  mypy:
    needs:
      - test-demo-app
      - test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/local.txt -r requirements/mypy.txt
      - name: run mypy
        run: mypy


  test-install-base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U setuptools
          python -m pip install .
      - name: Import django_structlog modules
        run: |
          python -c "import django_structlog"
          python -c "import django_structlog.apps"
          python -c "import django_structlog.signals"
          python -c "import django_structlog.app_settings"
          python -c "import django_structlog.middlewares.request"

  test-install-celery:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U setuptools
          python -m pip install .[celery]
      - name: Import django_structlog modules
        run: |
          python -c "import django_structlog"
          python -c "import django_structlog.apps"
          python -c "import django_structlog.signals"
          python -c "import django_structlog.app_settings"
          python -c "import django_structlog.middlewares.request"
      - name: Import django_structlog celery modules
        run: |
          python -c "import django_structlog.celery.receivers"
          python -c "import django_structlog.celery.steps"
          python -c "import django_structlog.celery.signals"

  test-install-commands:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U setuptools
          python -m pip install .[commands]
      - name: Import django_structlog modules
        run: |
          python -c "import django_structlog"
          python -c "import django_structlog.apps"
          python -c "import django_structlog.signals"
          python -c "import django_structlog.app_settings"
          python -c "import django_structlog.middlewares.request"
      - name: Import django_structlog commands modules
        run: |
          python -c "import django_structlog.commands"

  pypi-deployment:
    needs:
      - test-docs
      - test-install-base
      - test-install-celery
      - test-install-commands
      - black
      - ruff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U -q build
      - name: build sdist
        run: python -m build --sdist
      - name: build wheel
        run: python -m build --wheel
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_DEPLOYMENT_KEY }}
